{
	"info": {
		"_postman_id": "98959dcc-93c3-463a-af3c-89dd69f4904e",
		"name": "crud-auto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Le code status doit etre 201', function(){\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"\r",
							"const jsonData = pm.response.json()\r",
							"// set a user id \r",
							"pm.collectionVariables.set(\"userID\", jsonData.id ) \r",
							"\r",
							"\r",
							"pm.test(\"A un cle id: \", function(){\r",
							"    pm.expect(jsonData).to.have.property('id')\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"doit avoir le correct email\", function(){\r",
							"     pm.expect(jsonData.email).to.be.eq(\"Baba.yaya@test.com\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Baba yaya\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Baba.yaya@test.com\",\r\n    \"status\": \"active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{visibility}}",
						"{{version}}",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Find a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"status doit etre 200\", function(){\r",
							" pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"Le status a la creation doit etre active\", function(){\r",
							" pm.expect(jsonData.status).to.be.eq(\"active\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/{{userID}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{visibility}}",
						"{{version}}",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"status doit etre 200\", function(){\r",
							" pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"change le status le inactive\", function(){\r",
							" pm.expect(jsonData.status).to.be.eq(\"inactive\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Baba yaya\",\r\n    \"email\": \"Baba.yaya@test.com\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"inactive\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/{{userID}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{visibility}}",
						"{{version}}",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status doit etre 204\", function(){\r",
							" pm.response.to.have.status(204)\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/{{userID}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{visibility}}",
						"{{version}}",
						"users",
						"{{userID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "10d4e75c0d1033de2401e8c338cd20a88179a767aa0310c1bde7f21a0d448160",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userID",
			"value": ""
		}
	]
}